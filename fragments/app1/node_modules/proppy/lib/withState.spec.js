"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var withState_1 = require("./withState");
describe('proppy :: withState', function () {
    test('is a function', function () {
        expect(typeof withState_1.withState).toEqual('function');
    });
    test('initial state', function () {
        var P = withState_1.withState('counter', 'setCounter', 0);
        var p = P();
        expect(p.props.counter).toEqual(0);
        expect(typeof p.props.setCounter).toEqual('function');
    });
    test('initial subscription', function () {
        expect.assertions(3);
        var P = withState_1.withState('counter', 'setCounter', 0);
        var p = P();
        expect(p.props.counter).toEqual(0);
        expect(typeof p.props.setCounter).toEqual('function');
        p.subscribe(function (props) {
            expect(props.counter).toEqual(0);
        });
    });
    test('updates', function () {
        var P = withState_1.withState('counter', 'setCounter', 0);
        var p = P();
        expect(p.props.counter).toEqual(0);
        expect(typeof p.props.setCounter).toEqual('function');
        p.props.setCounter(1);
        expect(p.props.counter).toEqual(1);
        p.props.setCounter(2);
        expect(p.props.counter).toEqual(2);
        p.props.setCounter(3);
        expect(p.props.counter).toEqual(3);
    });
    test('subscription triggers', function () {
        var P = withState_1.withState('counter', 'setCounter', 0);
        var p = P();
        var triggerCount = 0;
        p.subscribe(function () {
            triggerCount++;
        });
        p.props.setCounter(1);
        p.props.setCounter(2);
        p.props.setCounter(3);
        expect(triggerCount).toEqual(4);
    });
});
//# sourceMappingURL=withState.spec.js.map