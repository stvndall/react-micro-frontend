export declare type Props = any;
export declare type Providers = any;
export declare type SetFunction = (props: Props, replace?: boolean) => any;
export declare type UnsubscribeFunction = () => void;
export declare type SubscribeFunction = (cb: any) => UnsubscribeFunction;
export declare type DestroyFunction = () => any;
export interface Proppy {
    parent?: Proppy | null;
    providers?: Providers;
    props?: Props;
    set?: SetFunction;
    subscribe?: SubscribeFunction;
    destroy?: DestroyFunction;
}
export declare type ProppyFactory = (providers?: Providers, parent?: Proppy | null) => Proppy;
export declare type InitializeFunction = () => void;
export declare type DidSubscribeFunction = () => void;
export declare type WillDestroyFunction = () => void;
export declare type HandleReceivedPropsFunction = (props: any) => void;
export interface ProppyFactoryOptions {
    initialize?: InitializeFunction;
    didSubscribe?: DidSubscribeFunction;
    willDestroy?: WillDestroyFunction;
    handleReceivedProps?: boolean | HandleReceivedPropsFunction;
}
