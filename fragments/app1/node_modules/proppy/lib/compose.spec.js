"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
/* global describe, test, expect */
var compose_1 = require("./compose");
var withProps_1 = require("./withProps");
var withState_1 = require("./withState");
var map_1 = require("./map");
var shouldUpdate_1 = require("./shouldUpdate");
describe('proppy :: compose', function () {
    test('is a function', function () {
        expect(typeof compose_1.compose).toEqual('function');
    });
    test('with multiple defaults', function () {
        var P = compose_1.compose(withProps_1.withProps({ foo: 'foo value' }), withProps_1.withProps({ bar: 'bar value' }), withProps_1.withProps(function (props, _a) {
            var baz = _a.baz;
            return ({ baz: baz });
        }));
        var p = P({
            baz: 'baz value',
        });
        expect(p.props).toEqual({
            foo: 'foo value',
            bar: 'bar value',
            baz: 'baz value',
        });
    });
    test('with multiple states', function () {
        var P = compose_1.compose(withState_1.withState('counter', 'setCounter', 0), withState_1.withState('age', 'setAge', 50), compose_1.compose(withState_1.withState('score', 'setScore', 0), shouldUpdate_1.shouldUpdate(function (prevProps, nextProps) { return nextProps.score % 2 === 0; })), map_1.map(function (props) { return (__assign({}, props, { score: props.score * 10 })); }));
        var p = P();
        expect(p.props.counter).toEqual(0);
        expect(typeof p.props.setCounter).toEqual('function');
        expect(p.props.age).toEqual(50);
        expect(typeof p.props.setAge).toEqual('function');
        expect(p.props.score).toEqual(0);
        expect(typeof p.props.setScore).toEqual('function');
        var triggerCount = 0;
        p.subscribe(function () {
            triggerCount++;
        });
        p.props.setCounter(1);
        expect(p.props.counter).toEqual(1);
        p.props.setCounter(2);
        expect(p.props.counter).toEqual(2);
        p.props.setAge(55);
        expect(p.props.age).toEqual(55);
        expect(triggerCount).toEqual(4);
        expect(p.props.counter).toEqual(2);
        expect(typeof p.props.setCounter).toEqual('function');
        expect(p.props.age).toEqual(55);
        expect(typeof p.props.setAge).toEqual('function');
        p.props.setScore(1);
        expect(p.props.score).toEqual(0);
        p.props.setScore(2);
        expect(p.props.score).toEqual(20);
    });
});
//# sourceMappingURL=compose.spec.js.map